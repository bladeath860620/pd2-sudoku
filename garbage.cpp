
void Sudoku::blanking()
{
	srand(time(NULL));
	int i, j;
	int n;
	for(i=0; i<9; i++)
	{
		for(j=0; j<9; j++)
		{
			su2[i][j] = su[i][j];
			su[i][j] = 0;
		}
	}
	n = rand() % 4;
	switch(n)
	{
		case 0:
			su[0][5] = su2[0][5];su[0][6] = su2[0][6];su[0][8] = su2[0][8];su[2][0] = su2[2][0];
			su[2][2] = su2[2][2];su[2][6] = su2[2][6];su[3][3] = su2[3][3];su[3][5] = su2[3][5];
			su[3][6] = su2[3][6];su[4][0] = su2[4][0];su[4][4] = su2[4][4];su[4][7] = su2[4][7];
			su[6][7] = su2[6][7];su[7][1] = su2[7][1];su[7][2] = su2[7][2];su[8][7] = su2[8][7];
			su[6][4] = su2[6][4];
		break;
		/*
		00000XX0X
		000000000
		X0X000X00
		000X0XX00
		X000X00X0
		000000000
		0000X00X0
		0XX000000
		0000000X0
		*/
		case 1:
			su[0][4] = su2[0][4];su[0][7] = su2[0][7];su[1][0] = su2[1][0];su[1][8] = su2[1][8];
			su[2][2] = su2[2][2];su[2][3] = su2[2][3];su[3][0] = su2[3][0];su[4][0] = su2[4][0];
			su[4][1] = su2[4][1];su[4][7] = su2[4][7];su[5][3] = su2[5][3];su[6][8] = su2[6][8];
			su[7][1] = su2[7][1];su[7][6] = su2[7][6];su[7][8] = su2[7][8];su[8][4] = su2[8][4];
			su[8][5] = su2[8][5];
		break;
		/*
		0000X00X0
		X0000000X
		00XX00000
		X00000000
		XX00000X0
		000X00000
		00000000X
		0X0000X0X
		0000XX000
		*/
		case 2:
			su[0][5] = su2[0][5];su[0][7] = su2[0][7];su[1][0] = su2[1][0];su[1][3] = su2[1][3];
			su[2][0] = su2[2][0];su[3][2] = su2[3][2];su[3][5] = su2[3][5];su[4][8] = su2[4][8];
			su[5][6] = su2[5][6];su[5][8] = su2[5][8];su[6][2] = su2[6][2];su[6][6] = su2[6][6];
			su[7][3] = su2[7][3];su[7][8] = su2[7][8];su[8][2] = su2[8][2];su[8][3] = su2[8][3];
			su[8][5] = su2[8][5];
		break;
		/*
		00000X0X0
		X00X00000
		X00000000
		00X00X000
		00000000X
		000000X0X
		00X000X00
		000X0000X
		00XX0X000
		*/
		case 3:
			su[1][1] = su2[1][1];su[1][5] = su2[1][5];su[2][3] = su2[2][3];su[2][6] = su2[2][6];
			su[2][7] = su2[2][7];su[3][0] = su2[3][0];su[3][3] = su2[3][3];su[3][7] = su2[3][7];
			su[5][1] = su2[5][1];su[5][8] = su2[5][8];su[6][0] = su2[6][0];su[6][2] = su2[6][2];
			su[6][7] = su2[6][7];su[7][1] = su2[7][1];su[7][5] = su2[7][5];su[7][8] = su2[7][8];
			su[8][5] = su2[8][5];
		break;
		/*
		000000000
		0X000X000
		000X00XX0
		X00X000X0
		000000000
		0X000000X
		X0X0000X0
		0X000X00X
		00000X000
		*/
	}
}

void Sudoku::giveQuestion()
{
	int n;
	int i, j;
	/*int temp2[9][9] =  {{7,9,6,1,3,2,8,4,5},
						{2,5,1,4,6,8,3,7,9},
						{8,3,4,9,5,7,1,6,2},
						{4,2,7,5,9,3,6,1,8},
						{3,1,5,8,2,6,7,9,4},
						{6,8,9,7,4,1,2,5,3},
						{5,7,3,6,8,4,9,2,1},
						{1,4,2,3,7,9,5,8,6},
						{9,6,8,2,1,5,4,3,7}};
	int temp3[9][9] =  {{2,8,3,1,4,5,7,6,9},
						{9,6,4,2,7,3,1,5,8},
						{7,1,5,6,8,9,2,4,3},
						{3,5,8,4,2,1,9,7,6},
						{4,2,7,9,5,6,8,3,1},
						{1,9,6,7,3,8,4,2,5},
						{8,4,9,3,6,7,5,1,2},
						{6,7,1,5,9,2,3,8,4},
						{5,3,2,8,1,4,6,9,7}};
	int temp4[9][9] =  {{6,8,4,1,2,7,3,9,5},
						{9,1,2,3,5,4,6,7,8},
						{3,7,5,6,9,8,2,1,4},
						{1,3,8,7,6,5,9,4,2},
						{2,9,6,8,4,3,7,5,1},
						{4,5,7,2,1,9,8,3,6},
						{7,6,3,4,8,1,5,2,9},
						{5,2,1,9,3,6,4,8,7},
						{8,4,9,5,7,2,1,6,3}};
	int temp5[9][9] =  {{7,2,1,3,6,4,5,9,8},
						{6,5,3,1,8,9,4,7,2},
						{4,8,9,2,7,5,1,6,3},
						{3,4,7,6,2,1,9,8,5},
						{1,9,5,7,4,8,3,2,6},
						{2,6,8,9,5,3,7,4,1},
						{9,3,6,4,1,2,8,5,7},
						{5,7,4,8,3,6,2,1,9},
						{8,1,2,5,9,7,6,3,4}};
	int temp6[9][9] =  {{3,8,6,2,1,4,5,9,7},
						{2,4,5,3,7,9,1,6,8},
						{1,9,7,5,8,6,2,3,4},
						{5,1,2,4,6,7,3,8,9},
						{4,3,8,1,9,5,7,2,6},
						{6,7,9,8,3,2,4,5,1},
						{9,6,1,7,5,3,8,4,2},
						{7,5,4,6,2,8,9,1,3},
						{8,2,3,9,4,1,6,7,5}};
	int temp7[9][9] =  {{5,3,1,2,4,6,8,9,7},
						{6,9,4,1,7,8,5,2,3},
						{8,7,2,5,3,9,4,1,6},
						{1,5,9,7,2,4,6,3,8},
						{2,8,7,3,6,1,9,5,4},
						{3,4,6,8,9,5,1,7,2},
						{9,2,5,6,8,7,3,4,1},
						{7,1,8,4,5,3,2,6,9},
						{4,6,3,9,1,2,7,8,5}};
	int temp8[9][9] =  {{7,6,4,1,5,2,3,8,9},
						{5,1,9,3,8,4,6,7,2},
						{8,2,3,7,6,9,1,5,4},
						{2,4,7,6,1,8,5,9,3},
						{1,3,5,9,2,7,4,6,8},
						{9,8,6,4,3,5,7,2,1},
						{3,5,2,8,4,6,9,1,7},
						{6,7,1,2,9,3,8,4,5},
						{4,9,8,5,7,1,2,3,6}};
	int temp9[9][9] =  {{1,9,7,2,4,3,5,8,6},
						{4,5,6,1,8,7,2,3,9},
						{8,3,2,5,6,9,1,7,4},
						{7,1,4,6,2,5,8,9,3},
						{3,6,5,4,9,8,7,1,2},
						{9,2,8,7,3,1,6,4,5},
						{2,7,9,8,5,4,3,6,1},
						{5,8,3,9,1,6,4,2,7},
						{6,4,1,3,7,2,9,5,8}};
	int i, j;
	srand(time(NULL));
	n = rand()%10;
	switch(n)
	{
		case 0:
			su[0][0]=6;su[0][1]=4;su[0][2]=9;su[0][3]=2;su[0][4]=1;su[0][5]=5;su[0][6]=3;su[0][7]=8;su[0][8]=7;
			su[1][0]=8;su[1][1]=1;su[1][2]=7;su[1][3]=4;su[1][4]=3;su[1][5]=6;su[1][6]=5;su[1][7]=9;su[1][8]=2;
			su[2][0]=2;su[2][1]=5;su[2][2]=3;su[2][3]=8;su[2][4]=7;su[2][5]=9;su[2][6]=4;su[2][7]=6;su[2][8]=1;
			su[3][0]=3;su[3][1]=8;su[3][2]=4;su[3][3]=1;su[3][4]=6;su[3][5]=2;su[3][6]=9;su[3][7]=7;su[3][8]=5;
			su[4][0]=1;su[4][1]=9;su[4][2]=5;su[4][3]=7;su[4][4]=4;su[4][5]=8;su[4][6]=6;su[4][7]=2;su[4][8]=3;
			su[5][0]=7;su[5][1]=2;su[5][2]=6;su[5][3]=5;su[5][4]=9;su[5][5]=3;su[5][6]=8;su[5][7]=1;su[5][8]=4;
			su[6][0]=5;su[6][1]=7;su[6][2]=1;su[6][3]=6;su[6][4]=8;su[6][5]=4;su[6][6]=2;su[6][7]=3;su[6][8]=9;
			su[7][0]=9;su[7][1]=6;su[7][2]=2;su[7][3]=3;su[7][4]=5;su[7][5]=1;su[7][6]=7;su[7][7]=4;su[7][8]=8;
			su[8][0]=4;su[8][1]=3;su[8][2]=8;su[8][3]=9;su[8][4]=2;su[8][5]=7;su[8][6]=1;su[8][7]=5;su[8][8]=6;
			break;
		case 1:
			su[0][0]=1;su[0][1]=9;su[0][2]=8;su[0][3]=2;su[0][4]=3;su[0][5]=4;su[0][6]=6;su[0][7]=5;su[0][8]=7;
			su[1][0]=6;su[1][1]=3;su[1][2]=4;su[1][3]=1;su[1][4]=5;su[1][5]=7;su[1][6]=8;su[1][7]=9;su[1][8]=2;
			su[2][0]=7;su[2][1]=5;su[2][2]=2;su[2][3]=9;su[2][4]=6;su[2][5]=8;su[2][6]=1;su[2][7]=3;su[2][8]=4;
			su[3][0]=4;su[3][1]=1;su[3][2]=6;su[3][3]=8;su[3][4]=9;su[3][5]=2;su[3][6]=3;su[3][7]=7;su[3][8]=5;
			su[4][0]=2;su[4][1]=7;su[4][2]=5;su[4][3]=6;su[4][4]=4;su[4][5]=3;su[4][6]=9;su[4][7]=8;su[4][8]=1;
			su[5][0]=9;su[5][1]=8;su[5][2]=3;su[5][3]=7;su[5][4]=1;su[5][5]=5;su[5][6]=2;su[5][7]=4;su[5][8]=6;
			su[6][0]=3;su[6][1]=6;su[6][2]=7;su[6][3]=5;su[6][4]=2;su[6][5]=9;su[6][6]=4;su[6][7]=1;su[6][8]=8;
			su[7][0]=5;su[7][1]=2;su[7][2]=9;su[7][3]=4;su[7][4]=8;su[7][5]=1;su[7][6]=7;su[7][7]=6;su[7][8]=3;
			su[8][0]=8;su[8][1]=4;su[8][2]=1;su[8][3]=3;su[8][4]=7;su[8][5]=6;su[8][6]=5;su[8][7]=2;su[8][8]=9;
			break;
		case 2:
			for(i=0; i<9; i++)
			{
				for(j=0; j<9; j++)
				{
					su[i][j] = temp2[i][j];
				}
			}
			break;
		case 3:
			for(i=0; i<9; i++)
			{
				for(j=0; j<9; j++)
				{
					su[i][j] = temp3[i][j];
				}
			}
			break;
		case 4:
			for(i=0; i<9; i++)
			{
				for(j=0; j<9; j++)
				{
					su[i][j] = temp4[i][j];
				}
			}
			break;
		case 5:
			for(i=0; i<9; i++)
			{
				for(j=0; j<9; j++)
				{
					su[i][j] = temp5[i][j];
				}
			}
			break;
		case 6:
			for(i=0; i<9; i++)
			{
				for(j=0; j<9; j++)
				{
					su[i][j] = temp6[i][j];
				}
			}
			break;
		case 7:
			for(i=0; i<9; i++)
			{
				for(j=0; j<9; j++)
				{
					su[i][j] = temp7[i][j];
				}
			}
			break;
		case 8:
			for(i=0; i<9; i++)
			{
				for(j=0; j<9; j++)
				{
					su[i][j] = temp8[i][j];
				}
			}
			break;
		case 9:
			for(i=0; i<9; i++)
			{
				for(j=0; j<9; j++)
				{
					su[i][j] = temp9[i][j];
				}
			}
			break;
		default:
			cout << "test" << endl;
			break;
	}
	blanking();*/
}

void Sudoku::solve()
{
	
}